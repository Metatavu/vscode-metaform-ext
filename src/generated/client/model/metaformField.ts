/**
 * Metaform REST API
 * REST API for Metaform
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';
import { MetaformFieldFlags } from './metaformFieldFlags';
import { MetaformFieldOption } from './metaformFieldOption';
import { MetaformFieldPermissionContexts } from './metaformFieldPermissionContexts';
import { MetaformFieldType } from './metaformFieldType';
import { MetaformTableColumn } from './metaformTableColumn';
import { MetaformVisibleIf } from './metaformVisibleIf';

export class MetaformField {
    'visibleIf'?: MetaformVisibleIf;
    'permissionContexts'?: MetaformFieldPermissionContexts;
    /**
    * Field name
    */
    'name'?: string;
    'type': MetaformFieldType;
    'title'?: string;
    'required'?: boolean;
    'contexts'?: Array<string>;
    'flags'?: MetaformFieldFlags;
    'placeholder'?: string;
    '_class'?: string;
    'readonly'?: boolean;
    'help'?: string;
    /**
    * a default value for a field
    */
    '_default'?: string;
    /**
    * Minimum value for a field. Only for number fields
    */
    'min'?: number;
    /**
    * Maximum value for a field. Only for number fields
    */
    'max'?: number;
    /**
    * Value step for a field. Only for number fields
    */
    'step'?: number;
    /**
    * Whether checkbox should be checked by default. Only for checkbox fields
    */
    'checked'?: boolean;
    /**
    * Defines whether field is printable or not. Only for table fields
    */
    'printable'?: boolean;
    /**
    * Options for radio, checklist, select fields
    */
    'options'?: Array<MetaformFieldOption>;
    /**
    * Source url for autocomplete and autocomplete-multiple fields
    */
    'sourceUrl'?: string;
    /**
    * Upload url for files field.
    */
    'uploadUrl'?: string;
    /**
    * Defines whether file fields allow multiple files or just one
    */
    'singleFile'?: boolean;
    /**
    * Defines whether file fields allow only images
    */
    'onlyImages'?: boolean;
    /**
    * Maximum upload size for image filds
    */
    'maxFileSize'?: number;
    /**
    * Defines whether user can add more table rows.
    */
    'addRows'?: boolean;
    /**
    * Defines whether table rows should be draggable.
    */
    'draggable'?: boolean;
    /**
    * Columns for table fields
    */
    'columns'?: Array<MetaformTableColumn>;
    /**
    * Url for logo field.
    */
    'src'?: string;
    /**
    * Text for small field.
    */
    'text'?: string;
    /**
    * Html code for html field.
    */
    'html'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "visibleIf",
            "baseName": "visible-if",
            "type": "MetaformVisibleIf"
        },
        {
            "name": "permissionContexts",
            "baseName": "permission-contexts",
            "type": "MetaformFieldPermissionContexts"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "MetaformFieldType"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "required",
            "baseName": "required",
            "type": "boolean"
        },
        {
            "name": "contexts",
            "baseName": "contexts",
            "type": "Array<string>"
        },
        {
            "name": "flags",
            "baseName": "flags",
            "type": "MetaformFieldFlags"
        },
        {
            "name": "placeholder",
            "baseName": "placeholder",
            "type": "string"
        },
        {
            "name": "_class",
            "baseName": "class",
            "type": "string"
        },
        {
            "name": "readonly",
            "baseName": "readonly",
            "type": "boolean"
        },
        {
            "name": "help",
            "baseName": "help",
            "type": "string"
        },
        {
            "name": "_default",
            "baseName": "default",
            "type": "string"
        },
        {
            "name": "min",
            "baseName": "min",
            "type": "number"
        },
        {
            "name": "max",
            "baseName": "max",
            "type": "number"
        },
        {
            "name": "step",
            "baseName": "step",
            "type": "number"
        },
        {
            "name": "checked",
            "baseName": "checked",
            "type": "boolean"
        },
        {
            "name": "printable",
            "baseName": "printable",
            "type": "boolean"
        },
        {
            "name": "options",
            "baseName": "options",
            "type": "Array<MetaformFieldOption>"
        },
        {
            "name": "sourceUrl",
            "baseName": "source-url",
            "type": "string"
        },
        {
            "name": "uploadUrl",
            "baseName": "upload-url",
            "type": "string"
        },
        {
            "name": "singleFile",
            "baseName": "single-file",
            "type": "boolean"
        },
        {
            "name": "onlyImages",
            "baseName": "only-images",
            "type": "boolean"
        },
        {
            "name": "maxFileSize",
            "baseName": "max-file-size",
            "type": "number"
        },
        {
            "name": "addRows",
            "baseName": "add-rows",
            "type": "boolean"
        },
        {
            "name": "draggable",
            "baseName": "draggable",
            "type": "boolean"
        },
        {
            "name": "columns",
            "baseName": "columns",
            "type": "Array<MetaformTableColumn>"
        },
        {
            "name": "src",
            "baseName": "src",
            "type": "string"
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "string"
        },
        {
            "name": "html",
            "baseName": "html",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return MetaformField.attributeTypeMap;
    }
}

