{
	"name": "metaform",
	"displayName": "metaform",
	"description": "Metaform admin tools",
	"version": "1.0.0",
	"publisher": "metatavu",
	"repository": "github:Metatavu/vscode-metaform-ext",
	"engines": {
		"vscode": "^1.49.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "metaformTreeDataProvider.downloadMetaform",
				"title": "Download Metaform"
			},
			{
				"command": "metaformTreeDataProvider.putMetaform",
				"title": "Update Metaform"
			},
			{
				"command": "metaformTreeDataProvider.deleteMetaform",
				"title": "Delete Metaform"
			},
			{
				"command": "metaformTreeDataProvider.downloadPdfExportTheme",
				"title": "Download PDF export theme"
			},
			{
				"command": "metaformTreeDataProvider.updatePdfExportTheme",
				"title": "Update PDF export theme"
			},
			{
				"command": "metaformTreeDataProvider.createEmailNotification",
				"title": "Create email notification"
			},
			{
				"command": "metaformTreeDataProvider.updateEmailNotification",
				"title": "Update email notification"
			},
			{
				"command": "metaformTreeDataProvider.deleteEmailNotification",
				"title": "Delete email notification"
			},
			{
				"command": "metaformTreeDataProvider.downloadEmailNotification",
				"title": "Download email notification"
			},
			{
				"command": "metaformTreeDataProvider.refresh",
				"title": "Refresh Metaform view",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			}
		],
		"views": {
			"explorer": [
				{
					"id": "metaformTreeDataProvider",
					"name": "Metaform",
					"contextualTitle": "Metaform"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "metaformTreeDataProvider.refresh",
					"when": "view == metaformTreeDataProvider",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "metaformTreeDataProvider.downloadMetaform",
					"when": "view == metaformTreeDataProvider && viewItem == metaform"
				},
				{
					"command": "metaformTreeDataProvider.putMetaform",
					"when": "view == metaformTreeDataProvider && viewItem == metaform"
				},
				{
					"command": "metaformTreeDataProvider.deleteMetaform",
					"when": "view == metaformTreeDataProvider && viewItem == metaform"
				},
				{
					"command": "metaformTreeDataProvider.downloadPdfExportTheme",
					"when": "view == metaformTreeDataProvider && viewItem == pdfexporttheme"
				},
				{
					"command": "metaformTreeDataProvider.updatePdfExportTheme",
					"when": "view == metaformTreeDataProvider && viewItem == pdfexporttheme"
				},
				{
					"command": "metaformTreeDataProvider.createEmailNotification",
					"when": "view == metaformTreeDataProvider && viewItem == emailnotifications"
				},
				{
					"command": "metaformTreeDataProvider.downloadEmailNotification",
					"when": "view == metaformTreeDataProvider && viewItem == emailnotification"
				},
				{
					"command": "metaformTreeDataProvider.updateEmailNotification",
					"when": "view == metaformTreeDataProvider && viewItem == emailnotification"
				},
				{
					"command": "metaformTreeDataProvider.deleteEmailNotification",
					"when": "view == metaformTreeDataProvider && viewItem == emailnotification"
				}
			]
		},
		"configuration": {
			"title": "Metaform",
			"properties": {
				"metaform.api.url": {
					"type": "string",
					"default": "https://example-api.metaform.fi/v1",
					"description": "Metaform API URL"
				},
				"metaform.auth.serverUrl": {
					"type": "string",
					"default": "https://example-auth.metaform.fi/auth",
					"description": "Metaform auth server URL"
				},
				"metaform.auth.realm": {
					"type": "string",
					"description": "Metaform auth realm"
				},
				"metaform.auth.clientId": {
					"type": "string",
					"description": "Metaform auth client id"
				},
				"metaform.auth.clientSecret": {
					"type": "string",
					"description": "Metaform auth client secret"
				},
				"metaform.auth.username": {
					"type": "string",
					"description": "Metaform auth username"
				},
				"metaform.auth.password": {
					"type": "string",
					"description": "Metaform auth password"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js",
		"build-client": "./node_modules/@openapitools/openapi-generator-cli/bin/openapi-generator generate -i metaform-api-spec/swagger.yaml -o ./src/generated/client -c generator-config.json -g typescript-node"
	},
	"devDependencies": {
		"@openapitools/openapi-generator-cli": "^1.0.18-4.3.1",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.0",
		"@types/node": "^14.0.27",
		"@types/request": "^2.48.5",
		"@types/vscode": "^1.49.0",
		"@typescript-eslint/eslint-plugin": "^4.1.1",
		"@typescript-eslint/parser": "^4.1.1",
		"eslint": "^7.9.0",
		"glob": "^7.1.6",
		"mocha": "^8.1.3",
		"typescript": "^4.0.2",
		"vscode-test": "^1.4.0"
	},
	"dependencies": {
		"request": "^2.88.2"
	}
}
